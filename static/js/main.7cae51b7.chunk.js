(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[0],{10:function(e,a,t){},12:function(e,a,t){"use strict";t.r(a);var c=t(1),o=t.n(c),s=t(4),n=t.n(s),l=(t(9),t(2)),i=(t(10),t(0));function r(e){return Object(i.jsx)("nav",{className:"navbar navbar-expand-lg navbar-".concat(e.mode," bg-").concat(e.mode),children:Object(i.jsxs)("div",{className:"container-fluid",children:[Object(i.jsx)("a",{className:"navbar-brand",href:"#",children:e.title}),Object(i.jsx)("button",{className:"navbar-toggler",type:"button","data-bs-toggle":"collapse","data-bs-target":"#navbarSupportedContent","aria-controls":"navbarSupportedContent","aria-expanded":"false","aria-label":"Toggle navigation",children:Object(i.jsx)("span",{className:"navbar-toggler-icon"})}),Object(i.jsxs)("div",{className:"collapse navbar-collapse",id:"navbarSupportedContent",children:[Object(i.jsx)("ul",{className:"navbar-nav me-auto mb-2 mb-lg-0",children:Object(i.jsx)("li",{className:"nav-item",children:Object(i.jsx)("a",{className:"nav-link active","aria-current":"page",href:"#",children:"Home"})})}),Object(i.jsxs)("div",{class:"form-check form-switch text-".concat("light"===e.mode?"dark":"light"),children:[Object(i.jsx)("input",{class:"form-check-input",type:"checkbox",onClick:e.toggleMode,id:"flexSwitchCheckDefault"}),Object(i.jsx)("label",{class:"form-check-label",for:"flexSwitchCheckDefault",children:"light"===e.mode?"Enable Dark Mode":"Enable Light Mode"})]})]})]})})}function d(e){var a=Object(c.useState)(""),t=Object(l.a)(a,2),o=t[0],s=t[1];return Object(i.jsxs)(i.Fragment,{children:[Object(i.jsxs)("div",{className:"container",style:{color:"dark"===e.mode?"white":"black"},children:[Object(i.jsx)("h1",{children:e.heading}),Object(i.jsx)("div",{className:"mb-3",children:Object(i.jsx)("textarea",{className:"form-control",value:o,onChange:function(e){s(e.target.value)},style:{backgroundColor:"dark"===e.mode?"grey":"white",color:"dark"===e.mode?"white":"black"},id:"myBox",rows:"8"})}),Object(i.jsx)("button",{className:"btn btn-primary mx-1",onClick:function(){var e=o.toUpperCase();s(e)},children:"Convert to Uppercase"}),Object(i.jsx)("button",{className:"btn btn-primary mx-1",onClick:function(){var e=o.toLowerCase();s(e)},children:"Convert to Lowercase"}),Object(i.jsx)("button",{className:"btn btn-primary mx-1",onClick:function(){s("")},children:"Clear"}),Object(i.jsx)("button",{className:"btn btn-primary mx-1",onClick:function(){var e=o.split(/[ ]+/);s(e.join(" "))},children:"Remove Extra Space"})]}),Object(i.jsxs)("div",{className:"container my-3",style:{color:"dark"===e.mode?"white":"black"},children:[Object(i.jsx)("h2",{children:"Your text summary"}),Object(i.jsxs)("p",{children:[o.split(" ").length," words and ",o.length," characters"]}),Object(i.jsx)("h2",{children:"Preview"}),Object(i.jsx)("p",{children:o})]})]})}function h(){var e=Object(c.useState)({color:"white",backgroundColor:"black"}),a=Object(l.a)(e,2),t=a[0],o=a[1],s=Object(c.useState)("Change to Light mode"),n=Object(l.a)(s,2),r=n[0],d=n[1];return Object(i.jsxs)("div",{className:"container my-3",style:t,children:[Object(i.jsx)("h1",{children:"About Us"}),Object(i.jsxs)("div",{className:"accordion",id:"accordionExample",children:[Object(i.jsxs)("div",{className:"accordion-item",style:t,children:[Object(i.jsx)("h2",{className:"accordion-header",id:"headingOne",children:Object(i.jsx)("button",{className:"accordion-button",type:"button",style:t,"data-bs-toggle":"collapse","data-bs-target":"#collapseOne","aria-expanded":"true","aria-controls":"collapseOne",children:"Accordion Item #1"})}),Object(i.jsx)("div",{id:"collapseOne",className:"accordion-collapse collapse show","aria-labelledby":"headingOne","data-bs-parent":"#accordionExample",children:Object(i.jsxs)("div",{className:"accordion-body",children:[Object(i.jsx)("strong",{children:"This is the first item's accordion body."})," It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the ",Object(i.jsx)("code",{children:".accordion-body"}),", though the transition does limit overflow."]})})]}),Object(i.jsxs)("div",{className:"accordion-item",style:t,children:[Object(i.jsx)("h2",{className:"accordion-header",id:"headingTwo",children:Object(i.jsx)("button",{className:"accordion-button collapsed",type:"button",style:t,"data-bs-toggle":"collapse","data-bs-target":"#collapseTwo","aria-expanded":"false","aria-controls":"collapseTwo",children:"Accordion Item #2"})}),Object(i.jsx)("div",{id:"collapseTwo",className:"accordion-collapse collapse","aria-labelledby":"headingTwo","data-bs-parent":"#accordionExample",children:Object(i.jsxs)("div",{className:"accordion-body",children:[Object(i.jsx)("strong",{children:"This is the second item's accordion body."})," It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the ",Object(i.jsx)("code",{children:".accordion-body"}),", though the transition does limit overflow."]})})]}),Object(i.jsxs)("div",{className:"accordion-item",style:t,children:[Object(i.jsx)("h2",{className:"accordion-header",id:"headingThree",children:Object(i.jsx)("button",{className:"accordion-button collapsed",type:"button",style:t,"data-bs-toggle":"collapse","data-bs-target":"#collapseThree","aria-expanded":"false","aria-controls":"collapseThree",children:"Accordion Item #3"})}),Object(i.jsx)("div",{id:"collapseThree",className:"accordion-collapse collapse","aria-labelledby":"headingThree","data-bs-parent":"#accordionExample",children:Object(i.jsxs)("div",{className:"accordion-body",children:[Object(i.jsx)("strong",{children:"This is the third item's accordion body."})," It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the ",Object(i.jsx)("code",{children:".accordion-body"}),", though the transition does limit overflow."]})})]})]}),Object(i.jsx)("br",{}),Object(i.jsx)("button",{className:"btn btn-primary",onClick:function(){"white"===t.color?(o({color:"black",backgroundColor:"white"}),d("Change to Dark Mode")):(o({color:"white",backgroundColor:"black",border:"1px solid white"}),d("Change to Light mode"))},children:r})]})}var b=function(){var e=Object(c.useState)("light"),a=Object(l.a)(e,2),t=a[0],o=a[1];return Object(i.jsxs)(i.Fragment,{children:[Object(i.jsx)(r,{title:"TextUtils",aboutText:"About",mode:t,toggleMode:function(){"light"===t?(o("dark"),document.body.style.backgroundColor="#000000"):(o("light"),document.body.style.backgroundColor="white")}}),Object(i.jsxs)("div",{className:"container my-3",children:[Object(i.jsx)(h,{}),Object(i.jsx)(d,{heading:"Write your text here",mode:t})]})]})},j=function(e){e&&e instanceof Function&&t.e(3).then(t.bind(null,14)).then((function(a){var t=a.getCLS,c=a.getFID,o=a.getFCP,s=a.getLCP,n=a.getTTFB;t(e),c(e),o(e),s(e),n(e)}))};n.a.render(Object(i.jsx)(o.a.StrictMode,{children:Object(i.jsx)(b,{})}),document.getElementById("root")),j()},9:function(e,a,t){}},[[12,1,2]]]);
//# sourceMappingURL=main.7cae51b7.chunk.js.map