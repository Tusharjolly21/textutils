{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","class","onClick","toggleMode","for","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","toLowerCase","split","join","length","App","setmode","aboutText","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.00cf99d4.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a\r\n                 className=\"nav-link active\" aria-current=\"page\" href=\"\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" to=\"/\">{props.aboutText}</a>\r\n              </li> */}\r\n            </ul>\r\n\r\n            <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input class=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n                <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">{props.mode==='light'?\"Enable Dark Mode\":\"Enable Light Mode\"}</label>\r\n              </div>  \r\n          </div>\r\n          \r\n        </div>\r\n      </nav>\r\n    );\r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        \r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    const handleLoClick = ()=>{\r\n        \r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n    const handleclearClick = ()=>{\r\n        \r\n        let newText = '';\r\n        setText(newText)\r\n    }\r\n    const removeExtrSpace =()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }  \r\n\r\n    const handleOnChange = (event)=>{\r\n    \r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState(''); \r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}> \r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\"> \r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleclearClick}>Clear</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={removeExtrSpace}>Remove Extra Space</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}} >\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm'\nimport About from './components/About'\nimport React, { useState } from 'react'\n\n\nfunction App() {\n  \n  const [mode, setmode] = useState('light');\n  \n\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor='#000000'\n    }else{\n      setmode('light');\n      document.body.style.backgroundColor='white'\n    }\n  }\n\n  return (\n    <>\n  \n    <Navbar title = \"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode}/>\n    <div className=\"container my-3\">\n            <TextForm heading =\"Write your text here\" mode={mode}/>\n\n       </div>\n    </>      \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"," import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}